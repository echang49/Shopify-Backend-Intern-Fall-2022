{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ItemDTO": {
				"properties": {
					"uuid": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"category": {
						"type": "string"
					},
					"count": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"uuid",
					"name",
					"category",
					"count"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InventoryCreationParams": {
				"properties": {
					"name": {
						"type": "string"
					},
					"category": {
						"type": "string"
					},
					"count": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"category",
					"count"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InventoryEditParams": {
				"properties": {
					"uuid": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"category": {
						"type": "string"
					},
					"count": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"uuid"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InventoryDeleteParams": {
				"properties": {
					"uuid": {
						"type": "string"
					}
				},
				"required": [
					"uuid"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ShipmentDTO": {
				"properties": {
					"uuid": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"items": {
						"items": {
							"$ref": "#/components/schemas/ItemDTO"
						},
						"type": "array"
					}
				},
				"required": [
					"uuid",
					"name",
					"items"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ShipmentCreationParams": {
				"properties": {
					"name": {
						"type": "string"
					},
					"items": {
						"items": {
							"properties": {
								"count": {
									"type": "number",
									"format": "double"
								},
								"uuid": {
									"type": "string"
								}
							},
							"required": [
								"count",
								"uuid"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"items"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "inventory-tracking",
		"version": "1.0.0",
		"description": "Web application that implements basic CRUD functionality in addition to undeletion.",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Edward Chang"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/inventory": {
			"get": {
				"operationId": "GetItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ItemDTO"
								}
							}
						}
					}
				},
				"description": "Retrieves the details of an existing item.\nSupply the unique item ID and receive corresponding item details.",
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ItemDTO"
								}
							}
						}
					}
				},
				"description": "Creates a new item based on the name, category, and count.\nReturns the new corresponding item details.",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InventoryCreationParams"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "EditItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ItemDTO"
								}
							}
						}
					}
				},
				"description": "Edits an existing item based on the unique item ID.\nReturns the new corresponding item details.\n\"uuid\" is required but \"name\", \"category\", and \"count\" are optional.",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InventoryEditParams"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteItem",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Deletes an existing item based on the unique item ID.\nDeleted items are stored in a seperate database collection for deleted items.",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InventoryDeleteParams"
							}
						}
					}
				}
			}
		},
		"/api/inventory/items": {
			"get": {
				"operationId": "GetItems",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ItemDTO"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves the details of a list of existing items.\nSupply the category and receive a corresponding list of item details.",
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "category",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/shipment": {
			"post": {
				"operationId": "CreateShipment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ShipmentDTO"
								}
							}
						}
					}
				},
				"description": "Creates a new shipment based on the name and item details then returns the corresponding shipment details.\nItem id's must be valid and have valid counts (not more than in the system).",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ShipmentCreationParams"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetShipment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ShipmentDTO"
								}
							}
						}
					}
				},
				"description": "Retrieves the details of an existing shipment.\nSupply the unique shipment ID and receive corresponding shipment details.",
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}